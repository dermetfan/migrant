# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required


env:
  global:
    - CRATE_NAME=migrant

matrix:
  include:
    # Linux
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    #- env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Other architectures
    #- env: TARGET=aarch64-unknown-linux-gnu
    #- env: TARGET=armv7-unknown-linux-gnueabihf
    #- env: TARGET=mips-unknown-linux-gnu
    #- env: TARGET=mips64-unknown-linux-gnuabi64
    #- env: TARGET=mips64el-unknown-linux-gnuabi64
    #- env: TARGET=mipsel-unknown-linux-gnu
    #- env: TARGET=powerpc-unknown-linux-gnu
    #- env: TARGET=powerpc64-unknown-linux-gnu
    #- env: TARGET=powerpc64le-unknown-linux-gnu
    #- env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

    # Testing other channels
    #- env: TARGET=x86_64-unknown-linux-gnu
    #  rust: nightly
    #- env: TARGET=x86_64-apple-darwin
    #  os: osx
    #  rust: nightly

before_install: set -e

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  api_key:
    secure: HGoo9VgPsvC7zfOqzfWCwt8faXfP/t7jOktfzrDC0TdVwllj37vCKvdqmz1QnoJFXLKrtb2nbiDvuWsz75PexQ3XDOhgnUukAyZtJbKDvo0IL6iQ3GOYUnDta58oR47UjqM7wqHTQGBNpQ5tb/GZoy+nceTMb5vRrevUzjbp+1F7EnBV3N04t1S46vV+uwfx3TbxlfntBkInZRjyOk6sSC1P3n7/ScquILXE5NkPn0+Hxv6nDjK43iQkdfvA7iOiD9ulMvEYDMl+qTQpuH0Tk/8m7yMJUhhErLT7mLurTf6HIHfum+xOMbNpm9gmiE8hFoFdUSg1JQrU6GbH47YgYmddS9oS+qc4QhwCtoddNWoPUO8v1MqE/bUyvbR3jfzBedzojw9rsNRvttes3cCiwntwcKDYHgc6r9aItpZPVCcTlKvH8s11HaEz3GsN2jDfXeM8jzvgyibeOKjHQWY/3UJoXFP+XtO4EPJyjm2FIksq7z5bLzc+ewEy7NzZkaazvmYnWIGoEvgPUasGyrmyJ3IeLzlKNMM5etoMkdZRgecdsuYqIahIwzkOBhp4QGuirE+xPAXVp0mi2qsDWblL06twwOWvHXkJK3R/hhiLc+B5GE7l6UPa7AT7PktuGb9Hr4igpN8I2w9Hw5vhjU0qmqetfEQKUBNGUYjJXjbrvV0=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # Pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
