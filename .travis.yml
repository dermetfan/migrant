# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required


env:
  global:
    - CRATE_NAME=migrant

matrix:
  include:
    # Linux
    - env: TARGET=i686-unknown-linux-gnu
    #- env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    #- env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    #- env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Other architectures
    #- env: TARGET=aarch64-unknown-linux-gnu
    #- env: TARGET=armv7-unknown-linux-gnueabihf
    #- env: TARGET=mips-unknown-linux-gnu
    #- env: TARGET=mips64-unknown-linux-gnuabi64
    #- env: TARGET=mips64el-unknown-linux-gnuabi64
    #- env: TARGET=mipsel-unknown-linux-gnu
    #- env: TARGET=powerpc-unknown-linux-gnu
    #- env: TARGET=powerpc64-unknown-linux-gnu
    #- env: TARGET=powerpc64le-unknown-linux-gnu
    #- env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

    # Testing other channels
    #- env: TARGET=x86_64-unknown-linux-gnu
    #  rust: nightly
    #- env: TARGET=x86_64-apple-darwin
    #  os: osx
    #  rust: nightly

before_install:
    - set -e

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  api_key:
    secure: n1iRdf6JTBdLPFFgvU7twVOpT3wL3rzFJ5v3QSUJ2psnU0IlDAP+Bwvz8F80PPrCzRbXzrcHD4J4OgeU0+KQYHdQB8s88M0sqGb3EdK8DxxAvmequJQP8N4PQ8DW1YUftK9lfBFk52cdQlWRAtdYBDgTxGctdrjCEZaMMqbRb8NMhuNcBPGe5dJBeHK454SI3j+sY1g+Az45fw9VF3c1aafkXFP8EiCpmvW+/VzpC2mrCUOIM0GYF3DoWF47so1blcUSI37263ia1hKff2pZvN892qxneUV94YoD3rg/SMgGYB8yz/iwcgPhD64QK1E3ii4pFXgSNZBJmj6s11lRX140bWvRiOgnDVHq1NatxklPO/Pd3W9sn08BkmPtdLLUEt6jp/Q+qQkypsrI6eIry2an0iwin3G+2dlWgtZC8j5tp2IJdUL6ZPy5RRSBbkyF5L10Z4VQL0U+D2/7UACYeRv5vQhlQO5rry/RkCrbVASFXnN+V3+uChGcwfjMAAX4T5jZw6w6BwnasIMO5tMNTASHJk4HdJp8oS5IRB0o5AnMOPjLlZ6e59WvLM+6sInleEfXQ0H65eapRb8ZwdUkUO1++BrXWwBWjFSInyI0EdpCJAzT9tsYOpdFbUu+G0Rso+8q1cK+I9HhnBpFqikAqcm0aOzbDhRcRSj6VzbZnIg=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # Pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
